<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>

<head>
	<meta charset="UTF-8">
	<title>Configurações</title>
	<!-- <meta name="viewport"
		content="width=device-width, height=device-height, initial-scale=1, maximum-scale=1, `user-scalable=no"> -->
	<meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover">
	<link rel="stylesheet" href="css/custom.css" />
	<link rel="stylesheet" href="css/jquery.mobile-1.4.5.min.css" />
	<!-- <link rel="stylesheet" href="css/bootstrap-tour-standalone.min.css" /> -->
	<script type="text/javascript" src="js/mc.js"></script>
	<script type="text/javascript" src="cordova.js"></script>
	<script src="js/jquery.js"></script>
	<script src="js/jquery.mobile-1.4.5.min.js"></script>
	<script src="js/shepherd.js"></script>
	<!-- <script src="js/bootstrap-tour-standalone.min.js"></script> -->
	<style>
		.menu .ui-mini.ui-btn-icon-left:after,
		.ui-mini .ui-btn-icon-left:after,
		.ui-header .ui-btn-icon-left:after,
		.ui-footer .ui-btn-icon-left:after {
			display: none;
		}

		.ui-btn-icon-left {
			position: relative;
			padding-left: 12px !important;
		}

		.ui-collapsible-inset .ui-collapsible-heading .ui-btn {
			box-shadow: none !important;
		}

		.ui-page-theme-a a {
			color: transparent;
		}

		.ui-page-theme-a a:hover {
			color: transparent;
		}
	</style>

	<script>

		window.onerror = function (message, url, lineNumber) {
			navigator.notification.alert(
				`Error: ${message} in ${url} at line ${lineNumber}`,  // message
				function () {
					return;
				},         // callback
				'SigmaCivil',            // title
				'OK'                  // buttonName
			);
		}

		var dados_checkpoint = "";
		// var id_cliente;
		var id_empree;

		var progressValue = 0;

		document.addEventListener("deviceready", onDeviceReady, false);

		function onDeviceReady() {
			iniciar();
		}

		var string_auxiliar = "";
		var vetor_consulta_evento = "";
		var vetor_dados_manutencao = "";

		function iniciar() {
			window.indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
			window.IDBTransaction = window.IDBTransaction || window.webkitIDBTransaction || window.msIDBTransaction;
			window.IDBKeyRange = window.IDBKeyRange || window.webkitIDBKeyRange || window.msIDBKeyRange;

			var menu_sup_offline = [
				'<form name="form_sup" action="" method="get">',
				'<div data-role="header" data-position="fixed" data-theme="a">',
				'<div class="ui-corner-all custom-corners">',
				'<div class="ui-bar ui-bar-a" style="height:38;text-align:center">',
				'<div class="barra1" align="left"><img src="images/wifi_vermelho.png" style="position: absolute; left: 70px; top: 20px;" width="17" /></div>',
				'<div align="center">',
				'<a style="position: relative; float: right; left: 15px; bottom: 4px;" href="#"><button style="box-shadow: none !important; background: #ebebeb !important; border: none;" onclick="goBack()" class="ui-btn-right ui-btn ui-btn-inline ui-mini ui-corner-all ui-btn-icon-right ui-icon-carat-l">Voltar</button></a>',
				'<table width="30" border="0" cellpadding="0" cellspacing="0" >',
				'<tr>',
				'<td width="30" ><img src="images/logo6.png" width="142"> </td>',
				'</tr>',
				'</table>',
				'</div>',
				'</div>',
				'</div>',
				'</div>',
				'</form>'
			].join('');

			var menu_sup_online = [
				'<form name="form_sup" action="" method="get">',
				'<div data-role="header" data-position="fixed" data-theme="a">',
				'<div class="ui-corner-all custom-corners">',
				'<div class="ui-bar ui-bar-a" style="height:38;text-align:center">',
				'<div class="barra1" align="left"><img src="images/wifi_verde.png" style="position: absolute; left: 70px; top: 20px;" width="17" /></div>',
				'<div align="center">',
				'<a style="position: relative; float: right; left: 15px; bottom: 4px;" href="#"><button style="box-shadow: none !important; background: #ebebeb !important; border: none;" onclick="goBack()" class="ui-btn-right ui-btn ui-btn-inline ui-mini ui-corner-all ui-btn-icon-right ui-icon-carat-l">Voltar</button></a>',
				'<table width="30" border="0" cellpadding="0" cellspacing="0" >',
				'<tr>',
				'<td width="30" ><img src="images/logo6.png" width="142"> </td>',
				'</tr>',
				'</table>',
				'</div>',
				'</div>',
				'</div>',
				'</div>',
				'</form>'
			].join('');

			document.getElementById('menu_opc2').innerHTML = menu_sup_online;

			setInterval(function () {
				// window.StatusBar.hide();

				if (progressValue == 100) {
					document.getElementById("parte_load_content").style.display = "none";
					document.getElementById("parte_load").style.display = "none";

					cordova.plugins.notification.local.clear();
				}

				if (navigator.connection.type == 0 || navigator.connection.type == 'none') {
					document.getElementById('menu_opc2').innerHTML = menu_sup_offline;
					return false;
				}
				else {
					document.getElementById('menu_opc2').innerHTML = menu_sup_online;
					return true;
				}
			}, 5000);

			var db;
			var request = window.indexedDB.open("db_sigmacivil", "1");

			request.onerror = function (event) {
				alert("Erro ao criar o banco (cod 03)");
			};

			request.onsuccess = function (event) {
				db = request.result;

				updateMtabConfigTutorial(db);

				db.onerror = function (event) {
					alert("Database error: " + event.target.errorCode);
				}
			}

			function updateMtabConfigTutorial(db) {
				var tx = db.transaction(['mtab_config'], 'readwrite');
				var store = tx.objectStore('mtab_config');
				var objectStoreRequest = store.openCursor();
				objectStoreRequest.onsuccess = function (event) {
					var cursor = event.target.result;
					if (cursor) {
						var data = cursor.value;

						if (!data.tutorial) {
							var tour = new Shepherd.Tour({
								useModalOverlay: true,
								defaultStepOptions: {
									cancelIcon: {
										enabled: true,
									},
									classes: "shadow-md bg-purple-dark",
									scrollTo: false,
								},
							});

							tour.addSteps([
								{
									title: "Creating a Shepherd Tour",
									text: `Creating a Shepherd tour is easy. too!\
 Just create a \`Tour\` instance, and add as many steps as you want.`,
									attachTo: {
										element: "#step-1",
										on: "bottom",
									},
									buttons: [
										{
											action() {
												return this.back();
											},
											classes: "shepherd-button-secondary",
											text: "Back",
										},
										{
											action() {
												return this.next();
											},
											text: "Next",
										},
									],
									id: "creating",
								},
								{
									title: "Creating a Shepherd Tour",
									text: `Creating a Shepherd tour is easy. too!\
 Just create a \`Tour\` instance, and add as many steps as you want.`,
									attachTo: {
										element: "#step-2",
										on: "bottom",
									},
									buttons: [
										{
											action() {
												return this.back();
											},
											classes: "shepherd-button-secondary",
											text: "Back",
										},
										{
											action() {
												return this.next();
											},
											text: "Next",
										},
									],
									id: "creating",
								},
								{
									title: "Creating a Shepherd Tour",
									text: `Creating a Shepherd tour is easy. too!\
 Just create a \`Tour\` instance, and add as many steps as you want.`,
									attachTo: {
										element: "#step-3",
										on: "bottom",
									},
									buttons: [
										{
											action() {
												return this.back();
											},
											classes: "shepherd-button-secondary",
											text: "Back",
										},
										{
											action() {
												return this.next();
											},
											text: "Next",
										},
									],
									id: "creating",
								},
							]);

							tour.start();
						}

						data.tutorial = true;
						var request = cursor.update(data);
					}
				}
			}

			/////////////////////////////////
			var data1_aux = q_mes + "/01/" + q_ano
			var data_ini_p_busca = new Date(data1_aux)

			var q_dia

			if (q_mes == 04 || q_mes == 06 || q_mes == 09 || q_mes == 11) {
				q_dia = 30;
			} else if ((q_mes == 02) && (q_ano % 4 == 0)) {
				q_dia = 29;
			} else if ((q_mes == 02) && (q_ano % 4 != 0)) {
				q_dia = 28;
			} else {
				q_dia = 31;
			}

			var data2_aux = q_mes + "/" + q_dia + "/" + q_ano

			var data_final_p_busca = new Date(data2_aux)
			/////////////////////////////////////////////

			if (tem_conexao()) {
				// Buscando o id_prog_manut, dia, mes e ano e criando um array de objetos para o for() do contaManutEvento()
				var ajax = new XMLHttpRequest();
				ajax.open("GET", "https://www.sigmacivil.com.br/app_sc/consult_emp_online.asp?l=" + login + "&s=" + senha + "&versao=2.2&t=" + Math.random(), true);
				ajax.addEventListener("loadend", function (evt) {
					var resposta_total = this.responseText;
					var jsontext = resposta_total.split("*")

					var getLogin = JSON.parse(jsontext[0]);
					var logou = getLogin.logou;
					qual_id_cliente = getLogin.id_cliente;
					var num_empree = getLogin.id_empree;
					var nome_empree = getLogin.nome_empree;
					q_e_construtora = getLogin.e_construtora;
					var data_implantacao_sc = new Date(getLogin.data_implantacao_sc)

					var resultado_consulta = getLogin.status_sync;
					var parte_resultado = resultado_consulta.split('_')
					var status_sync_serv = parte_resultado[0]
					var bloqueio = parte_resultado[1]
					var q_mensagem = parte_resultado[2]

					if (logou == "S") {

						var getEmpree = jsontext[1];
						var objEmpree = JSON.parse(getEmpree);
						var dados_0 = ""
						var dados_1 = ""
						var str = ""
						var str2 = ""
						var qtde_eventos = 0;
						var compl2 = ""
						var temp1 = ""
						var data_maxima_alteracao;
						var data_minima_alteracao;

						for (i = 0; i < objEmpree.dados_empreendimento.length; i++) {
							//calculo da data do evento
							qtde_eventos = parseInt(objEmpree.dados_empreendimento[i].dias_garant / (objEmpree.dados_empreendimento[i].qdp * objEmpree.dados_empreendimento[i].qtae))
							str = objEmpree.dados_empreendimento[i].formato_periodicidade

							var data_inicial_garantia = new Date(objEmpree.dados_empreendimento[i].dig)
							str2 = str.split("_")

							////////////////////////////////// calculo dos eventos \\\\\\\\\\
							var meio_empree = "";

							for (j = 1; j <= qtde_eventos; j++) {
								compl2 = j * str2[0] * objEmpree.dados_empreendimento[i].qtae

								var new_data_evento = new Date(data_inicial_garantia)

								if (str2[1] == "d") {
									new_data_evento.setDate(new_data_evento.getDate() + compl2);
								}
								if (str2[1] == "m") {

									/////para soma em MESES
									var inteiro_ano = compl2 / 12;
									inteiro_ano = Math.floor(inteiro_ano);
									var aux_mes = compl2 - (12 * inteiro_ano);
									aux_mes = (new_data_evento.getMonth() + aux_mes)

									var soma_ano
									var aux_dia

									if (aux_mes >= 12) {
										aux_mes = aux_mes - 12;
										soma_ano = 1;
									}
									else {
										aux_mes = aux_mes;
										soma_ano = 0;
									}

									var aux_ano = inteiro_ano + soma_ano
									aux_ano = (new_data_evento.getFullYear() + aux_ano)

									if (new_data_evento.getDate() == 31) {

										if (aux_mes == 03 || aux_mes == 05 || aux_mes == 08 || aux_mes == 10) {
											aux_dia = 30;
										} else if ((aux_mes == 01) && (aux_ano % 4 == 0)) {
											aux_dia = 29;
										} else if ((aux_mes == 01) && (aux_ano % 4 != 0)) {
											aux_dia = 28;
										} else {
											aux_dia = 31;
										}

									} else if (new_data_evento.getDate() == 30) {

										if ((aux_mes == 01) && (aux_ano % 4 == 0)) {
											aux_dia = 29;
										} else if ((aux_mes == 01) && (aux_ano % 4 != 0)) {
											aux_dia = 28;
										} else {
											aux_dia = 30;
										}

									} else if (new_data_evento.getDate() == 29) {

										if ((aux_mes == 01) && (aux_ano % 4 != 0)) {
											aux_dia = 28;
										} else {
											aux_dia = 29;
										}

									} else {
										aux_dia = new_data_evento.getDate();
									}

									new_data_evento = new Date(aux_ano, aux_mes, aux_dia)
								} // for para gerar eventos

								if (str2[1] == "yyyy") {
									new_data_evento.setFullYear(new_data_evento.getFullYear() + compl2);
								}

								if (new_data_evento >= data_implantacao_sc) {

									if (new_data_evento >= data_ini_p_busca && new_data_evento <= data_final_p_busca) {

										temp1 = new_data_evento.getDate() + "/" + (new_data_evento.getMonth() + 1) + "/" + new_data_evento.getFullYear() + "<br>"
										var aux_mes_novo = new_data_evento.getMonth() + 1;
										aux_mes_novo = '0' + aux_mes_novo
										aux_mes_novo = aux_mes_novo.substring(aux_mes_novo.length - 2, aux_mes_novo.length);

										var aux_dia_novo = new_data_evento.getDate();
										aux_dia_novo = '0' + aux_dia_novo
										aux_dia_novo = aux_dia_novo.substring(aux_dia_novo.length - 2, aux_dia_novo.length);

										vetor_consulta_evento += objEmpree.dados_empreendimento[i].id_prog_manut + '*' + new_data_evento.getFullYear() + '*' + aux_mes_novo + '*' + aux_dia_novo + ';'
										vetor_dados_manutencao += objEmpree.dados_empreendimento[i].id_prog_manut + '*' + objEmpree.dados_empreendimento[i].nome_sistema + '*' + objEmpree.dados_empreendimento[i].nome_atividade + '*' + objEmpree.dados_empreendimento[i].nome_periodicidade + '*' + objEmpree.dados_empreendimento[i].resp + '*' + temp1 + '*' + objEmpree.dados_empreendimento[i].qdp + '*' + objEmpree.dados_empreendimento[i].qtae + '*' + objEmpree.dados_empreendimento[i].gap + '*' + new_data_evento + ';'
									}
								}

								if (new_data_evento > data_final_p_busca) { break; }
							} //for next 1

						} //for next 2

						string_auxiliar += "inico do innerhtml:" + Date(Date.now()) + "<br>"

						string_auxiliar += " <br><br><br>-------INI  vetor_consulta_evento------------------ " + vetor_consulta_evento + "---------FIM------------<br>"

						string_auxiliar += "inico do resposta_total:" + Date(Date.now()) + "<br>"
						vetor_consulta_evento = vetor_consulta_evento.substring(0, vetor_consulta_evento.length - 1);
						vetor_dados_manutencao = vetor_dados_manutencao.substring(0, vetor_dados_manutencao.length - 1);

						var data_post = "l=" + login + "&s=" + senha + "&d=" + vetor_consulta_evento;
						var ajax2 = new XMLHttpRequest();
						ajax2.open("POST", "https://www.sigmacivil.com.br/app_sc/consult_evento_onlineB.asp?versao=2.2&t=" + Math.random(), true);
						ajax2.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
						ajax2.addEventListener("loadend", function (evt) {
							var resposta_total = this.responseText;
							var jsontext = resposta_total.split("#")

							var getLogin = JSON.parse(jsontext[0]);
							logou = getLogin.logou;

							if (logou == "S") {

								var getEvento = jsontext[1];
								var objEvento = JSON.parse(getEvento);

								var cada_vet_manut = vetor_dados_manutencao.split(";")
								var cada_vet_evento = vetor_consulta_evento.split(';')

								for (i = 0; i < objEvento.dados_emp.length; i++) {
									string_auxiliar += " <br>-------CADA evento-----%%%%%%%%%%%%%%-------------  ev=" + objEvento.dados_emp[i].ev + "- up=" + objEvento.dados_emp[i].up + "---------FIM evento------------<br>"

									var ev = objEvento.dados_emp[i].ev
									var up = objEvento.dados_emp[i].up

									string_auxiliar += " <br>-------CADA manut-------%%%%%%%%%%%%%-----------  " + cada_vet_manut[i] + "---------FIM manut------------<br>"

									var cada_parte_vet_manut = cada_vet_manut[i].split("*")
									var cada_parte_vet_evento = cada_vet_evento[i].split("*")

									var obj_config = {
										id_prog_manut: cada_parte_vet_manut[0],
										dia_ev: cada_parte_vet_evento[3],
										mes_ev: cada_parte_vet_evento[2],
										ano_ev: cada_parte_vet_evento[1]
									};

									attrs.push(obj_config);

								}

							}
						});

						ajax2.send(data_post);

					} else { //nao logou
						window.location.assign("login.htm");
					}
				});

				ajax.send();
				// Fim
			}
		}

	</script>

</head>

<body>
	<div id="parte_load_content"
		style="width: 100%; display: none; height: 100%; position: absolute; background: rgba(0,0,0,.7); z-index: 150;">
	</div>

	<!-- TELA DE LOADING AO ENVIAR ALGUM ARQUIVO PARA A GALERIA DE IMAGENS SERVIDOR -->
	<div id="parte_load"
		style="z-index: 250; display: none; position: fixed; width: 100%; height: 100%; flex-direction: column; justify-content: center; align-items: center;"
		align="center">
		<img src="images/tail-spin.svg" width="35" height="35">
		<p id="progress-value"></p>
		<div style="display: flex; margin-top: 50px;">
			<button class="ui-btn ui-mini" style="margin-right: 10px; background: #b10b0b; border-color: #b10b0b;"
				type="button">
				<a href="#" onclick="cancelarUpload()"
					style="color: #fff; text-shadow: none; text-decoration: none;">Cancelar</a>
			</button>
		</div>
	</div>

	<div align="center">

		<span id="menu_opc2"></span>

		<span id="visual_apagar"></span>

		<div class="btn-bars">
			<div style="top:4; z-index: 50" data-role="collapsible" data-collapsed="true" class="ui-btn-left menu"
				data-mini="true">
				<h4 class="btn-bars-bars">
					<img class="is-bars" src="images/bars.svg" width="14" alt="Menu" />
					<img class="is-times is-disabled" src="images/times.svg" width="13" alt="Menu" />
				</h4>
				<ul class="menu-tablet-responsive" style="border: 2px solid #38c;" data-role="listview"
					data-mini="true">
					<li>
						<a class="ui-btn ui-icon-gear ui-btn-icon-right ui-shadow ui-corner-all actived" href="#"
							onClick="go_to_page_config()">Configurações</a>
					</li>
					<li>
						<a class="ui-btn ui-icon-power ui-btn-icon-right ui-shadow ui-corner-all" href="#"
							onClick="closeApp()">Fechar app</a>
					</li>
					<li>
						<a class="click" href="#" onClick="enviar_sync()">Logout</a>
					</li>
				</ul>
			</div>
		</div>

		<div style="border-radius: 0; background: #38c; border: 0; margin: 0; padding: 5px 0;">
			<div align="center">
				<table width="100%" height="27" border="0" cellpadding="0" cellspacing="0">
					<tr>
						<td width="20" class="menu_2">
							<div align="center"></div>
						</td>
						<td width="130" height="27">
							<div align="center">
								<strong class="title-check-white">Configurações</strong>
							</div>
						</td>
						<td width="20" class="menu_2">
							<div style="position: relative; right: 12px;" align="right">
								<a href="#transitionExample" data-transition="pop" data-rel="popup">
									<img src="images/question-circle2.png" width="15" alt="">
								</a>
							</div>
						</td>
					</tr>
				</table>
			</div>
		</div>

		<div data-role="popup" id="transitionExample" class="ui-content" data-theme="a">
			<h2>Como funciona?</h2>
			<p>Com o Checkpoint do SigmaCivil é possível registrar dia e
				horário da presença física de algum usuário ou
				funcionário à frente dos QRCodes de cada sistema do empreendimento.</p>
			<ol>
				<li>Leia os QRCodes do SigmaCivil para marcar a presença do usuário em determinado sistema e horário.
				</li>
				<li>Sincronize os dados para enviar essas informações ao servidor.</li>
				<li>Acompanhe os relatórios online.</li>
			</ol>
		</div>
	</div>

	<div id="forms-configs" class="div-spacing"></div>

	<div id="step-3" style="margin: 0; padding: 0 16px;">
		<div style="display: flex; flex-direction: column;">
			<div style="margin: 0">
				<p style="margin: 0 0 8px;" for="flip-select">Upload de todos os arquivos
					pendentes:</p>
				<small style="margin-left: 8px; color: #666;">Realize o upload de todos os arquivos</small>
			</div>
			<button class="ui-btn ui-icon-cloud ui-btn-icon-left ui-shadow ui-corner-all btn-success" type="button"
				onclick="uploadArquivos()">Upload de arquivos</button>
		</div>
	</div>

	<div class="btns_opcionais">
		<button type="button" onclick="showTour()">
			<img src="images/chalkboard-teacher.svg" width="25" alt="Tour" />
			Tour
		</button>
		<button type="button">
			<img src="images/chalkboard-teacher.svg" width="25" alt="Tour" />
			Tutorial em vídeo
		</button>
	</div>

	<!-- <div id="progress-value"></div> -->

	<!-- Menu bottom -->
	<nav class="main-menu-bottom">
		<div>
			<button class="buttons-navigate" type="button" onclick="volta_uni()">
				<img src="images/engenheiro_cogs.png" width="22" alt="Home" />
				<p>manutenções</p>
			</button>
			<button class="buttons-navigate" type="button" onclick="scan()">
				<img src="images/qr_code.png" width="22" alt="Qr_code" />
				<p>qrcode</p>
			</button>
			<button class="buttons-navigate" type="button" onclick="go_relat_check2()">
				<img src="images/graph.png" width="22" alt="Relatório" />
				<p>rel.checkpoint</p>
			</button>
			<!--button class="buttons-navigate" type="button" onclick="openBrowser()">
                <img src="images/call.png" width="22" alt="Chamado" />
                <p>abrir chamado</p>
            </!--button-->
		</div>
	</nav>
	<!-- Fim Menu bottom -->

</body>

</html>

<script>

	var num_empree = getquerystring("e");

	var login = getquerystring("l");
	var senha = getquerystring("s");

	var q_mes = getquerystring("qm")
	var q_ano = getquerystring("qa")

	var id_cliente = getquerystring("idc");
	var e_construtora = getquerystring("econst");

	var attrs = [];

	var id_sis = getquerystring("id_sis");

	var sl1 = '';
	var sl2 = '';

	var totalArqs = 0;

	//////////////////////////////////////

	function uploadArquivos() {
		if (!tem_conexao()) {
			alert("Essa ação só pode ser realizada com conexão internet!");
			return;
		}

		var db;
		var request = window.indexedDB.open("db_sigmacivil", "1");

		request.onerror = function (event) {
			alert("Erro ao criar o banco (cod 01)");
		};

		request.onsuccess = function (event) {
			db = request.result;

			var ipm_ = "";
			var dia_ = "";
			var mes_ = "";
			var ano_ = "";

			for (var i = 0; i < attrs.length; i++) {
				ipm_ = attrs[i].id_prog_manut;
				dia_ = attrs[i].dia_ev;
				mes_ = attrs[i].mes_ev;
				ano_ = attrs[i].ano_ev;

				consultaManutEvento(db, ipm_, dia_, mes_, ano_);
			}

			db.onerror = function (event) {
				alert("Database error: " + event.target.errorCode);
			}
		}

		function consultaManutEvento(db, id_prog_manut, dia_ev, mes_ev, ano_ev) {
			var tx = db.transaction(['mtab_prog_manut_evento'], 'readwrite');
			var store = tx.objectStore('mtab_prog_manut_evento');
			var index = store.index('comparar');
			var whereEquals = IDBKeyRange.only([id_prog_manut, dia_ev, mes_ev, ano_ev]);
			var objectStoreRequest = index.openCursor(whereEquals);
			objectStoreRequest.onsuccess = function (event) {
				var cursor = event.target.result;

				var i;
				var meio_empree = "";
				var final_empree = "";
				var tam_ti;
				var aux_image_upload;

				if (cursor) {
					var rrr_caminho_imagens = cursor.value.caminho_imagens;
					var rrr_caminho_texto = cursor.value.caminho_texto;
					var rrr_caminho_audio = cursor.value.caminho_audio;

					apagar1 = rrr_caminho_audio;

					var rrr_caminho_video = cursor.value.caminho_video;
					var rrr_id_prog_manut = cursor.value.id_prog_manut;
					var rrr_status_caminho_imagens = cursor.value.status_imagens_upl;
					var rrr_status_caminho_video = cursor.value.status_video_upl;
					var rrr_status_caminho_audio = cursor.value.status_audio_upl;
					var rrr_status_caminho_texto = cursor.value.status_texto_upl;
				}

				var todas_imagens = ""
				var todas_status_imagens = ""
				if (rrr_caminho_imagens == null || rrr_caminho_imagens == "") {
					tam_ti = 0;
				}
				else {
					todas_imagens = rrr_caminho_imagens.split("**");
					todas_status_imagens = rrr_status_caminho_imagens.split("**");
					tam_ti = todas_imagens.length;
				}

				for (k = 0; k < tam_ti; k++) {

					if (todas_status_imagens[k] == '0') {
						aux_image_upload = 'upload.png';
						totalArqs += 1;

						upload_imagem(k, id_prog_manut, dia_ev, mes_ev, ano_ev);
					}
					else {
						aux_image_upload = 'upload_verde.png';
					}

					// automatic upload
					if (aux_image_upload == 'upload.png') {
						qtd_tam_ti = k + 1;
					}
				}

				if (rrr_status_caminho_video == '0') {
					aux_image_upload = 'upload.png';
					totalArqs += 1;

					upload_video(id_prog_manut, dia_ev, mes_ev, ano_ev);
				}
				else {
					aux_image_upload = 'upload_verde.png';
				}

				if (rrr_status_caminho_audio == '0') {
					aux_image_upload = "upload.png";
					totalArqs += 1;

					upload_audio(id_prog_manut, dia_ev, mes_ev, ano_ev);
				}
				else {
					aux_image_upload = "upload_verde.png";
				}

				if (rrr_status_caminho_texto == '0') {
					aux_image_upload = 'upload.png';
					totalArqs += 1;

					upload_texto(id_prog_manut, dia_ev, mes_ev, ano_ev);
				}
				else {
					aux_image_upload = 'upload_verde.png';
				}

			}
		}
	}

	var aux_1_status = "";

	function upload_imagem(q_id, id_prog_manut, dia_ev, mes_ev, ano_ev) {

		if (tem_conexao()) {

			var q_id;
			var all_images;
			var all_status_images;
			var taman;
			var aux_1 = "";

			var db;
			var request = window.indexedDB.open("db_sigmacivil", "1");

			request.onerror = function (event) {
				alert("Erro ao criar o banco (cod 04)");
			};

			request.onsuccess = function (event) {
				db = request.result;

				uploadManutEvento(db);

				db.onerror = function (event) {
					alert("Database error: " + event.target.errorCode);
				}
			}

			function uploadManutEvento(db) {
				var tx = db.transaction(['mtab_prog_manut_evento'], 'readwrite');
				var store = tx.objectStore('mtab_prog_manut_evento');
				var index = store.index('comparar');
				var whereEquals = IDBKeyRange.only([id_prog_manut, dia_ev, mes_ev, ano_ev]);
				index.openCursor(whereEquals).onsuccess = function (event) {
					var cursor = event.target.result;
					if (cursor) {
						var data = cursor.value;

						var k;
						aux_caminho_imagens = data.caminho_imagens;

						all_images = aux_caminho_imagens.split("**");

						aux_1 = aux_1 + all_images[q_id] + "**";
						var aux_2 = aux_1.substring(0, aux_1.length - 2);

						// marcar que foi feito upload para esta imagem

						aux_status_imagens_upl = data.status_imagens_upl;

						all_status_images = aux_status_imagens_upl.split("**");
						taman = all_status_images.length;

						aux_1_status = "";

						for (k = 0; k < taman; k++) {
							if (q_id != k) {
								aux_1_status = aux_1_status + all_status_images[k] + "**"
							}
							else {
								aux_1_status = aux_1_status + "1" + "**"
								var ja_fez_upload = all_status_images[k]
							}
						}

						aux_1_status = aux_1_status.substring(0, aux_1_status.length - 2)
						// fim  marcar que foi feito upload para esta imagem

						if (ja_fez_upload != '1') {
							up_loadPhoto(aux_2, q_id, aux_1_status, id_prog_manut, dia_ev, mes_ev, ano_ev);
						}
						else {
							up_loadPhoto(aux_2, q_id, aux_status_imagens_upl, id_prog_manut, dia_ev, mes_ev, ano_ev);
						}
					}
				}
			}
		} else {
			navigator.notification.confirm(
				'Problemas com a sua conexão ao fazer upload da imagem. Tentar novamente?',
				function (buttonIndex) {
					if (buttonIndex === 2) {
						upload_imagem(q_id);
					}
				},
				'SigmaCivil',
				['Cancelar', 'Tentar novamente']
			);
		}
	}

	function up_loadPhoto(imageURI, q_k, aux_1_status, id_prog_manut, dia_ev, mes_ev, ano_ev) {

		document.getElementById("parte_load_content").style.display = "block";
		document.getElementById("parte_load").style.display = "flex";
		window.location.href = "#ancora123"

		var q_k;
		var options = new FileUploadOptions();
		options.fileKey = "file";
		options.fileName = imageURI.substr(imageURI.lastIndexOf('/') + 1);
		options.mimeType = "image/jpeg";

		var params = new Object();
		params.value1 = "test";
		params.value2 = "param";

		options.params = params;
		options.chunkedMode = false;

		var ft = new FileTransfer();
		// var progressValue = 0;
		ft.onprogress = function (progressEvent) {
			if (progressEvent.lengthComputable) {
				// Calculate the percentage
				progressValue = Math.round(progressEvent.loaded / progressEvent.total * 100);
			} else {
				progressValue++;
			}

			// Display percentage in the UI
			document.getElementById("progress-value").innerHTML = `${progressValue.toFixed()}%`;
		};

		ft.upload(imageURI, "http://www.sigmacivil.com.br/app_sc/rec_foto_uploaded.php?idpm=" + id_prog_manut + "&dia=" + dia_ev + "&mes=" + mes_ev + "&ano=" + ano_ev + "&versao=2.2&econst=" + e_construtora + "&idc=" + id_cliente + "&q_k=" + q_k, win_up(id_prog_manut, dia_ev, mes_ev, ano_ev, aux_1_status), fail_up, options);
	}

	var win_up = function (id_prog_manut, dia_ev, mes_ev, ano_ev, aux_1_status, r) {
		var db;
		var request = window.indexedDB.open("db_sigmacivil", "1");

		request.onerror = function (event) {
			alert("Erro ao criar o banco (cod 05)");
		};

		sleep(2000);

		var status_photo = aux_1_status.split('0').join('1');

		var storage = localStorage.setItem(`status_${id_prog_manut}_${dia_ev}_${mes_ev}_${ano_ev}`, status_photo);

		request.onsuccess = function (event) {
			db = request.result;

			updateManutEventoWinUp(db, id_prog_manut, dia_ev, mes_ev, ano_ev, aux_1_status);

			db.onerror = function (event) {
				alert("Database error: " + event.target.errorCode);
			}
		}

		function updateManutEventoWinUp(db, id_prog_manut, dia_ev, mes_ev, ano_ev, aux_1_status) {
			var tx = db.transaction(['mtab_prog_manut_evento'], 'readwrite');
			var store = tx.objectStore('mtab_prog_manut_evento');
			var index = store.index('comparar');
			var whereEquals = IDBKeyRange.only([id_prog_manut, dia_ev, mes_ev, ano_ev]);
			index.openCursor(whereEquals).onsuccess = function (event) {
				var cursor = event.target.result;
				if (cursor) {
					var data = cursor.value;

					data.status_imagens_upl = localStorage.getItem(`status_${id_prog_manut}_${dia_ev}_${mes_ev}_${ano_ev}`);

					var request = cursor.update(data);
				}
			}
		}
	}

	var fail_up = function (error) {
		document.getElementById("parte_load_content").style.display = "none";
		document.getElementById("parte_load").style.display = "none";
		// alert("Não foi feito o upload da imagem!");

		navigator.notification.confirm(
			'Não foi feito o upload da imagem. Tentar novamente?',
			function (buttonIndex) {
				if (buttonIndex === 2) {
					go_to_page_config();
				}
			},
			'SigmaCivil',
			['Cancelar', 'Tentar novamente']
		);
	}
	// FIM UPLOAD IMAGEM

	// UPLOAD VIDEO
	function upload_video(id_prog_manut, dia_ev, mes_ev, ano_ev) {

		if (tem_conexao()) {

			var db;
			var request = window.indexedDB.open("db_sigmacivil", "1");

			request.onerror = function (event) {
				alert("Erro ao criar o banco (cod 08)");
			};

			request.onsuccess = function (event) {
				db = request.result;

				uploadManutEventoVideo(db);

				db.onerror = function (event) {
					alert("Database error: " + event.target.errorCode);
				}
			}

			function uploadManutEventoVideo(db) {
				var tx = db.transaction(['mtab_prog_manut_evento'], 'readwrite');
				var store = tx.objectStore('mtab_prog_manut_evento');
				var index = store.index('comparar');
				var whereEquals = IDBKeyRange.only([id_prog_manut, dia_ev, mes_ev, ano_ev]);
				var objectStoreRequest = index.openCursor(whereEquals);
				objectStoreRequest.onsuccess = function (event) {
					var cursor = event.target.result;
					if (cursor) {
						var data = cursor.value;

						if (cursor.value.status_video_upl != '1') {
							var aux_caminho_video = data.caminho_video;
							up_loadVideo(aux_caminho_video, id_prog_manut, dia_ev, mes_ev, ano_ev);
						}
						else {
							var aux_caminho_video = data.caminho_video;
							up_loadVideo(aux_caminho_video, id_prog_manut, dia_ev, mes_ev, ano_ev);
						}
					}
				}
			}
		} else {
			navigator.notification.confirm(
				'Problemas com a sua conexão ao fazer upload do vídeo. Tentar novamente?',
				function (buttonIndex) {
					if (buttonIndex === 2) {
						upload_video(id_prog_manut, dia_ev, mes_ev, ano_ev);
					}
				},
				'SigmaCivil',
				['Cancelar', 'Tentar novamente']
			);
		}
	}

	// UPLOAD VIDEO
	function up_loadVideo(videoURL, id_prog_manut, dia_ev, mes_ev, ano_ev) {

		document.getElementById("parte_load_content").style.display = "block";
		document.getElementById("parte_load").style.display = "flex";
		window.location.href = "#ancora123"

		var options = new FileUploadOptions();
		options.fileKey = "file";
		options.fileName = videoURL.substr(videoURL.lastIndexOf('/') + 1);
		options.mimeType = "video/mp4";
		options.chunkedMode = false;

		var ft = new FileTransfer();
		ft.onprogress = function (progressEvent) {
			if (progressEvent.lengthComputable) {
				// Calculate the percentage
				progressValue = Math.round(progressEvent.loaded / progressEvent.total * 100);
			} else {
				progressValue++;
			}

			// Display percentage in the UI
			document.getElementById("progress-value").innerHTML = `${progressValue.toFixed()}%`;
		};

		ft.upload(videoURL, "http://www.sigmacivil.com.br/app_sc/rec_video_uploaded.php?idpm=" + id_prog_manut + "&dia=" + dia_ev + "&mes=" + mes_ev + "&ano=" + ano_ev + "&versao=2.2&econst=" + e_construtora + "&idc=" + id_cliente, win_up_v(id_prog_manut, dia_ev, mes_ev, ano_ev), fail_up_v, options);

	}

	var win_up_v = function (id_prog_manut, dia_ev, mes_ev, ano_ev, r) {
		var db;
		var request = window.indexedDB.open("db_sigmacivil", "1");

		request.onerror = function (event) {
			alert("Erro ao criar o banco (cod 09)");
		};

		request.onsuccess = function (event) {
			db = request.result;

			updateManutEventoWinUpVideo(db, id_prog_manut, dia_ev, mes_ev, ano_ev);

			db.onerror = function (event) {
				alert("Database error: " + event.target.errorCode);
			}
		}

		function updateManutEventoWinUpVideo(db, id_prog_manut, dia_ev, mes_ev, ano_ev) {
			var tx = db.transaction(['mtab_prog_manut_evento'], 'readwrite');
			var store = tx.objectStore('mtab_prog_manut_evento');
			var index = store.index('comparar');
			var whereEquals = IDBKeyRange.only([id_prog_manut, dia_ev, mes_ev, ano_ev]);
			index.openCursor(whereEquals).onsuccess = function (event) {
				var cursor = event.target.result;
				if (cursor) {
					var data = cursor.value;

					data.status_video_upl = "1";

					var request = cursor.update(data);
				}
			}
		}
	}

	var fail_up_v = function (error) {
		document.getElementById("parte_load_content").style.display = "none";
		document.getElementById("parte_load").style.display = "none";
		// alert("Não foi feito o upload do vídeo!");

		navigator.notification.confirm(
			'Não foi feito o upload do vídeo. Tentar novamente?',
			function (buttonIndex) {
				if (buttonIndex === 2) {
					go_to_page_config();
				}
			},
			'SigmaCivil',
			['Cancelar', 'Tentar novamente']
		);
	}
	// FIM UPLOAD VIDEO

	// UPLOAD AUDIO
	function upload_audio(id_prog_manut, dia_ev, mes_ev, ano_ev) {

		if (tem_conexao()) {

			var db;
			var request = window.indexedDB.open("db_sigmacivil", "1");

			request.onerror = function (event) {
				alert("Erro ao criar o banco (cod 12)");
			};

			request.onsuccess = function (event) {
				db = request.result;

				uploadManutEventoAudio(db);

				db.onerror = function (event) {
					alert("Database error: " + event.target.errorCode);
				}
			}

			function uploadManutEventoAudio(db) {
				var tx = db.transaction(['mtab_prog_manut_evento'], 'readwrite');
				var store = tx.objectStore('mtab_prog_manut_evento');
				var index = store.index('comparar');
				var whereEquals = IDBKeyRange.only([id_prog_manut, dia_ev, mes_ev, ano_ev]);
				var objectStoreRequest = index.openCursor(whereEquals);
				objectStoreRequest.onsuccess = function (event) {
					var cursor = event.target.result;
					if (cursor) {
						var data = cursor.value;

						if (cursor.value.status_audio_upl != '1') {
							var aux_caminho_audio = data.caminho_audio;
							up_loadAudio(aux_caminho_audio, id_prog_manut, dia_ev, mes_ev, ano_ev);
						}
						else {
							var aux_caminho_audio = data.caminho_audio;
							up_loadAudio(aux_caminho_audio, id_prog_manut, dia_ev, mes_ev, ano_ev);
						}
					}
				}
			}
		} else {
			navigator.notification.confirm(
				'Problemas com a sua conexão ao fazer upload do áudio. Tentar novamente?',
				function (buttonIndex) {
					if (buttonIndex === 2) {
						upload_audio();
					}
				},
				'SigmaCivil',
				['Cancelar', 'Tentar novamente']
			);
		}
	}

	function up_loadAudio(audioURL, id_prog_manut, dia_ev, mes_ev, ano_ev) {

		document.getElementById("parte_load_content").style.display = "block";
		document.getElementById("parte_load").style.display = "flex";
		window.location.href = "#ancora123"

		var options = new FileUploadOptions();
		options.fileKey = "file";
		options.fileName = audioURL.substr(audioURL.lastIndexOf('/') + 1);
		options.mimeType = "audio/amr";
		options.chunkedMode = false;

		var ft = new FileTransfer();
		ft.onprogress = function (progressEvent) {
			if (progressEvent.lengthComputable) {
				// Calculate the percentage
				progressValue = Math.round(progressEvent.loaded / progressEvent.total * 100);
			} else {
				progressValue++;
			}

			// Display percentage in the UI
			document.getElementById("progress-value").innerHTML = `${progressValue.toFixed()}%`;
		};

		ft.upload(audioURL, "http://www.sigmacivil.com.br/app_sc/rec_audio_uploaded.php?idpm=" + id_prog_manut + "&dia=" + dia_ev + "&mes=" + mes_ev + "&ano=" + ano_ev + "&versao=2.2&econst=" + e_construtora + "&idc=" + id_cliente, win_up_a(id_prog_manut, dia_ev, mes_ev, ano_ev), fail_up_a, options);

	}

	var win_up_a = function (id_prog_manut, dia_ev, mes_ev, ano_ev, r) {
		var db;
		var request = window.indexedDB.open("db_sigmacivil", "1");

		request.onerror = function (event) {
			alert("Erro ao criar o banco (cod 13)");
		};

		request.onsuccess = function (event) {
			db = request.result;

			updateManutEventoWinUpAudio(db);

			db.onerror = function (event) {
				alert("Database error: " + event.target.errorCode);
			}
		}

		function updateManutEventoWinUpAudio(db) {
			var tx = db.transaction(['mtab_prog_manut_evento'], 'readwrite');
			var store = tx.objectStore('mtab_prog_manut_evento');
			var index = store.index('comparar');
			var whereEquals = IDBKeyRange.only([id_prog_manut, dia_ev, mes_ev, ano_ev]);
			index.openCursor(whereEquals).onsuccess = function (event) {
				var cursor = event.target.result;
				if (cursor) {
					var data = cursor.value;

					data.status_audio_upl = "1";

					var request = cursor.update(data);
				}
			}
		}
	}

	var fail_up_a = function (error) {
		document.getElementById("parte_load_content").style.display = "none";
		document.getElementById("parte_load").style.display = "none";
		// alert("Não foi feito o upload do áudio!");

		navigator.notification.confirm(
			'Não foi feito o upload do áudio. Tentar novamente?',
			function (buttonIndex) {
				if (buttonIndex === 2) {
					go_to_page_config();
				}
			},
			'SigmaCivil',
			['Cancelar', 'Tentar novamente']
		);
	}
	// FIM UPLOAD AUDIO

	// UPLOAD TEXTO
	function upload_texto(id_prog_manut, dia_ev, mes_ev, ano_ev) {

		if (tem_conexao()) {
			var db;
			var request = window.indexedDB.open("db_sigmacivil", "1");

			request.onerror = function (event) {
				alert("Erro ao criar o banco (cod 14)");
			};

			request.onsuccess = function (event) {
				db = request.result;

				uploadManutEventoTexto(db);

				db.onerror = function (event) {
					alert("Database error: " + event.target.errorCode);
				}
			}

			function uploadManutEventoTexto(db) {
				var tx = db.transaction(['mtab_prog_manut_evento'], 'readwrite');
				var store = tx.objectStore('mtab_prog_manut_evento');
				var index = store.index('comparar');
				var whereEquals = IDBKeyRange.only([id_prog_manut, dia_ev, mes_ev, ano_ev]);
				var objectStoreRequest = index.openCursor(whereEquals);
				objectStoreRequest.onsuccess = function (event) {
					var cursor = event.target.result;
					if (cursor) {
						var data = cursor.value;

						if (cursor.value.status_texto_upl != '1') {
							var aux_caminho_texto = data.caminho_texto;
							up_loadTexto(aux_caminho_texto, id_prog_manut, dia_ev, mes_ev, ano_ev);
						} else {
							var aux_caminho_texto = data.caminho_texto;
							up_loadTexto(aux_caminho_texto, id_prog_manut, dia_ev, mes_ev, ano_ev);
						}
					}
				}
			}
		} else {
			navigator.notification.confirm(
				'Problemas com a sua conexão ao fazer upload. Tentar novamente?',
				function (buttonIndex) {
					if (buttonIndex === 2) {
						upload_texto();
					}
				},
				'SigmaCivil',
				['Cancelar', 'Tentar novamente']
			);
		}
	}

	function up_loadTexto(textoURL, id_prog_manut, dia_ev, mes_ev, ano_ev) {

		if (!textoURL) return;

		document.getElementById("parte_load_content").style.display = "block";
		document.getElementById("parte_load").style.display = "flex";
		window.location.href = "#ancora123"

		var data = 'tx=' + encodeURIComponent(textoURL) + '&ipm=' + id_prog_manut + '&d=' + dia_ev + '&m=' + mes_ev + '&a=' + ano_ev + "&econst=" + e_construtora + "&idc=" + id_cliente;
		var ajax = new XMLHttpRequest();
		if (tem_conexao()) {
			ajax.open("POST", "https://www.sigmacivil.com.br/app_sc/rec_texto_uploaded.asp?versao=2.2", true);
			ajax.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
			ajax.addEventListener("loadend", function (evt) {
				var resposta_total = this.responseText;
				if (resposta_total == "grav_ok") {
					var db;
					var request = window.indexedDB.open("db_sigmacivil", "1");

					request.onerror = function (event) {
						alert("Erro ao criar o banco (cod 15)");
					};

					request.onsuccess = function (event) {
						db = request.result;

						uploadManutEventoWinUpTexto(db);

						db.onerror = function (event) {
							alert("Database error: " + event.target.errorCode);
						}
					}

					function uploadManutEventoWinUpTexto(db) {
						var tx = db.transaction(['mtab_prog_manut_evento'], 'readwrite');
						var store = tx.objectStore('mtab_prog_manut_evento');
						var index = store.index('comparar');
						var whereEquals = IDBKeyRange.only([id_prog_manut, dia_ev, mes_ev, ano_ev]);
						index.openCursor(whereEquals).onsuccess = function (event) {
							var cursor = event.target.result;
							if (cursor) {
								var data = cursor.value;

								data.status_texto_upl = "1";

								var request = cursor.update(data);
							}
						}
					}
				} else {
					document.getElementById("parte_load_content").style.display = "none";
					document.getElementById("parte_load").style.display = "none";
					// alert("Problemas com a gravação do texto. Tente novamente mais tarde (cod 08).");

					navigator.notification.confirm(
						'Problemas com a gravação do texto. Tentar novamente?',
						function (buttonIndex) {
							if (buttonIndex === 2) {
								go_to_page_config();
							}
						},
						'SigmaCivil',
						['Cancelar', 'Tentar novamente']
					);
				}
			});

			data = data.split(":").join("%3A")
			data = data.split("{").join(" % 7B")
			data = data.split("}").join("%7D")
			data = data.split(",").join("%2C")
			data = data.split("[").join("%5B")
			data = data.split("]").join("%5D")
			data = data.split(String.fromCharCode(34)).join("%22")

			ajax.send(data);
		} else {
			navigator.notification.confirm(
				'Problemas com a sua conexão. Tentar novamente?',
				function (buttonIndex) {
					if (buttonIndex === 2) {
						go_to_page_config();
					}
				},
				'SigmaCivil',
				['Cancelar', 'Tentar novamente']
			);
		}

	}
	// FIM UPLOAD TEXTO

	function editaImagem() {
		var db;
		var request = window.indexedDB.open("db_sigmacivil", "1");

		request.onerror = function (event) {
			alert("Erro ao criar o banco (cod 01)");
		};

		request.onsuccess = function (event) {
			db = request.result;

			consultaMtabConfig(db);

			db.onerror = function (event) {
				alert("Database error: " + event.target.errorCode);
			}
		}

		function consultaMtabConfig(db) {
			var tx = db.transaction(['mtab_config'], 'readwrite');
			var store = tx.objectStore('mtab_config');
			var objectStoreRequest = store.openCursor();
			objectStoreRequest.onsuccess = function (event) {
				var cursor = event.target.result;
				if (cursor) {
					var data = cursor.value;

					var selectEditPicture = document.querySelector('.edit-picture').value;
					var selectAutomaticUpload = document.querySelector('.automatic-upload').value;

					if (selectEditPicture === 'on') {
						data['editar_fotos'] = true;
						localStorage.setItem('sl1', 'selected');
					} else {
						data['editar_fotos'] = false;
						localStorage.setItem('sl1', '');
					}

					if (selectAutomaticUpload === 'on') {
						data['upload_automatico'] = true;
						localStorage.setItem('sl2', 'selected');
					} else {
						data['upload_automatico'] = false;
						localStorage.setItem('sl2', '');
					}

					// alert(data['editar_fotos']);
					// alert(data['upload_automatico']);

					var request = cursor.update(data);
					request.onsuccess = function (event) {
						// go_to_page_config();
					}
				}
			}
		}
	}

	var formConfig = [
		'<form>',
		'<div id="step-1" style="display: flex; align-items: center; justify-content: space-between;">',
		'<div style="margin: 0">',
		'<p style="padding: 0 10px 0 0; margin-bottom: 8px;" for="flip-select">Ativar a edição de imagens ao serem tiradas:</p>',
		'<small style="margin-left: 8px; color: #666;">teste testando</small>',
		'</div>',
		'<select name="flip-select" id="flip-select" onchange="editaImagem()" class="edit-picture" data-role="slider" data-mini="true" data-track-theme="a" data-theme="a">',
		'<option value="off">Des</option>',
		'<option value="on" ' + localStorage.getItem('sl1') + '>Lig</option>',
		'</select>',
		'</div>',
		'<hr/>',

		'<div id="step-2" style="display: flex; align-items: center; justify-content: space-between;">',
		'<div style="margin: 0">',
		'<p style="padding: 0 10px 0 0; margin-bottom: 8px;" for="flip-select">Ativar o upload de mídias automaticamente:</p>',
		'<small style="margin-left: 8px; color: #666;">teste testando</small>',
		'</div>',
		'<select name="flip-select" id="flip-select" onchange="editaImagem()" class="automatic-upload" data-role="slider" data-mini="true" data-track-theme="a" data-theme="a">',
		'<option value="off">Des</option>',
		'<option value="on" ' + localStorage.getItem('sl2') + '>Lig</option>',
		'</select>',
		'</div>',
		'</form>',
		'<hr/>'
	].join('');

	document.getElementById('forms-configs').innerHTML = formConfig;

	function scan() {
		cordova.plugins.barcodeScanner.scan(
			function (result) {
				if (!result.cancelled) {
					// In this case we only want to process QR Codes
					if (result.format == "QR_CODE") {
						var value = result.text;

						var ponto_ini = value.indexOf("www.sigmacivil.com.br/us/new_qr_hist_mp.asp?c=");
						var parte1 = value.substring(ponto_ini + 46);

						var pedaco = parte1.split("_");
						// alert(id_empree);
						// alert(pedaco[0]);

						if (num_empree == pedaco[0]) {

							var qid_empree = num_empree;
							var qid_sistema = pedaco[1];

							var d = new Date();
							var qdata_checkpoint = d.getFullYear() + "-" + (d.getMonth() + 1) + "-" + d.getDate() + " " + d.getHours() + ":" + d.getMinutes() + ":" + d.getSeconds();

							var qatualizado_serv = "N";

							navigator.geolocation.getCurrentPosition(
								function (position) {
									var qlatitude_checkpoint = position.coords.latitude;
									var qlongitude_checkpoint = position.coords.longitude;
									var qaltura_checkpoint = position.coords.altitude;

									var db;
									var request = window.indexedDB.open("db_sigmacivil", "1");

									request.onerror = function (event) {
										alert("Erro ao criar o banco (cod 02)");
									};

									request.onsuccess = function (event) {
										db = request.result;

										inserirDadosCheckpoint(db, dadosCheckpoint);

										db.onerror = function (event) {
											alert("Database error: " + event.target.errorCode);
										}
									}

									var dadosCheckpoint = [
										{
											id_empree: qid_empree,
											id_sistema: qid_sistema,
											data_checkpoint: qdata_checkpoint,
											latitude_checkpoint: qlatitude_checkpoint,
											longitude_checkpoint: qlongitude_checkpoint,
											altura_checkpoint: qaltura_checkpoint,
											atualizado_serv: qatualizado_serv,
										}
									];

									function inserirDadosCheckpoint(db, dadosCheckpoint) {
										var tx = db.transaction(['mtab_checkpoint'], 'readwrite');
										var store = tx.objectStore('mtab_checkpoint');

										dadosCheckpoint.map(function (dadoCheckpoint) {
											store.add(dadoCheckpoint);
										});

										tx.oncomplete = function () {
											go_page_qrcode(qid_sistema, qid_empree);
										}

										tx.onerror = function (event) {
											alert('error storing checkpoint note ' + event.target.error);
										}
									}
								},
								function (error) {
									var db;
									var request = window.indexedDB.open("db_sigmacivil", "1");

									request.onerror = function (event) {
										alert("Erro ao criar o banco (cod 03)");
									};

									request.onsuccess = function (event) {
										db = request.result;

										inserirDadosCheckpointError(db, dadosCheckpointError);

										db.onerror = function (event) {
											alert("Database error: " + event.target.errorCode);
										}
									}

									var dadosCheckpointError = [
										{
											id_empree: qid_empree,
											id_sistema: qid_sistema,
											data_checkpoint: qdata_checkpoint,
											latitude_checkpoint: "",
											longitude_checkpoint: "",
											altura_checkpoint: "",
											atualizado_serv: qatualizado_serv,
										}
									];

									function inserirDadosCheckpointError(db, dadosCheckpointError) {
										var tx = db.transaction(['mtab_checkpoint'], 'readwrite');
										var store = tx.objectStore('mtab_checkpoint');

										dadosCheckpointError.map(function (dadoCheckpointError) {
											store.add(dadoCheckpointError);
										});

										tx.oncomplete = function () {
											go_page_qrcode(qid_sistema, qid_empree);
										}

										tx.onerror = function (event) {
											alert('error storing checkpointError note ' + event.target.error);
										}
									}
								}
							);

						} else {
							alert("Esse QRCode não é válido");
						}

					} else {
						alert("Desculpe, só é possível ler QRCODES");
					}
				} else {
					// alert("Leitura do QRCODE cancelada");
				}
			},
			function (error) {
				// alert("Erro: " + error);
			}
		);
	}

	function go_page_qrcode(q_id_sistema, q_num_empree) {
		window.location.assign("qrcode.htm?l=" + login + "&s=" + senha + "&e=" + q_num_empree + "&id_sis=" + q_id_sistema + "&qm=" + parseInt(q_mes) + "&qa=" + parseInt(q_ano) + "&idc=" + id_cliente + "&econst=" + e_construtora);
	}

	function volta_uni() {
		if (navigator.connection.type == 0 || navigator.connection.type == 'none') {
			// alert('Está offline');
			window.location.assign("empree.htm?l=" + login + "&s=" + senha + "&e=" + num_empree + "&qm=" + parseInt(q_mes) + "&qa=" + parseInt(q_ano));
		}
		else {
			// alert('Está onlline');
			window.location.assign("empree_online.htm?l=" + login + "&s=" + senha + "&e=" + num_empree + "&qm=" + parseInt(q_mes) + "&qa=" + parseInt(q_ano));
		}
	}

	function go_to_page_config() {
		window.location.assign("configuracoes.htm?e=" + num_empree + "&l=" + login + "&s=" + senha + "&qm=" + parseInt(q_mes) + "&qa=" + parseInt(q_ano) + "&idc=" + id_cliente + "&econst=" + e_construtora);
	}

	function goBack() {
		return history.back();
	}

	function tem_conexao() {

		if (navigator.connection.type == 0 || navigator.connection.type == 'none') {
			return false;
		}
		else {
			return true;
		}

	}

	function removeAcento(text) {
		// text = text.toLowerCase();

		// a
		text = text.replace(/Á/g, 'xcL1A')
		text = text.replace(/À/g, 'xcL2A')
		text = text.replace(/Ã/g, 'xcL3A')
		text = text.replace(/Â/g, 'xcL4A')

		text = text.replace(/á/g, 'xcL1a')
		text = text.replace(/à/g, 'xcL2a')
		text = text.replace(/ã/g, 'xcL3a')
		text = text.replace(/â/g, 'xcL4a')

		// e
		text = text.replace(/É/g, 'xcL1E')
		text = text.replace(/È/g, 'xcL2E')
		text = text.replace(/Ê/g, 'xcL4E')

		text = text.replace(/é/g, 'xcL1e')
		text = text.replace(/è/g, 'xcL2e')
		text = text.replace(/ê/g, 'xcL4e')

		// i
		text = text.replace(/Í/g, 'xcL1I')
		text = text.replace(/Ì/g, 'xcL2I')
		text = text.replace(/Î/g, 'xcL4I')

		text = text.replace(/í/g, 'xcL1i')
		text = text.replace(/ì/g, 'xcL2i')
		text = text.replace(/î/g, 'xcL4i')

		// o
		text = text.replace(/Ó/g, 'xcL1O')
		text = text.replace(/Ò/g, 'xcL2O')
		text = text.replace(/Õ/g, 'xcL3O')
		text = text.replace(/Ô/g, 'xcL4O')

		text = text.replace(/ó/g, 'xcL1o')
		text = text.replace(/ò/g, 'xcL2o')
		text = text.replace(/õ/g, 'xcL3o')
		text = text.replace(/ô/g, 'xcL4o')

		// u
		text = text.replace(/Ú/g, 'xcL1U')
		text = text.replace(/Ù/g, 'xcL2U')
		text = text.replace(/Û/g, 'xcL4U')

		text = text.replace(/ú/g, 'xcL1u')
		text = text.replace(/ù/g, 'xcL2u')
		text = text.replace(/û/g, 'xcL4u')

		// ç
		text = text.replace(/Ç/g, 'xcL0C')

		text = text.replace(/ç/g, 'xcL0c')

		return text;
	}

	function go_relat_check2() {
		if (tem_conexao()) {
			window.location.assign("new_checkpoint_hist.htm?e=" + num_empree + /*"&id_sist=" + id_sis +*/ "&l=" + login + "&s=" + senha + "&qm=" + parseInt(q_mes) + "&qa=" + parseInt(q_ano) + "&idc=" + id_cliente + "&econst=" + e_construtora)
		} else {
			alert('Você está sem conexão com a internet. Para visualizar o relatório online é necessário estar conectado. Favor se conectar.');
		}
	}

	function openBrowser() {
		var options = "location=yes,lefttoright=yes,toolbarcolor=#b10b0b,hideurlbar=yes,closebuttoncaption=<  SigmaCivil,closebuttoncolor=#ffffff";

		cordova.InAppBrowser.open('https://www.google.com.br', '_blank', options);
	}

	function enviar_sync() {
		navigator.notification.confirm(
			'Confirma que deseja se deslogar do SigmaCivil?',
			function (buttonIndex) {
				if (buttonIndex === 2) {
					return;
				}

				navigator.notification.confirm(
					'Tem certeza que deseja sair do app SigmaCivil? Todos os seus arquivos como fotos e vídeos serão apagados deste dispositivo! Confirmar?',
					function (buttonIndex) {
						if (buttonIndex === 2) {
							return;
						}

						document.form_sup.action = "del.htm";
						document.form_sup.submit();
					},
					'SigmaCivil',
					['OK', 'Cancelar']
				);
			},
			'SigmaCivil',
			['OK', 'Cancelar']
		);

		// decisao = confirm("Deseja efetuar novo login? Será possível se logar novamente em qualquer empreendimento atualizando o Plano de Manutenção!");

		// if (decisao) {
		// 	document.form_sup.action = "del.htm";
		// 	document.form_sup.submit();

		// } else {

		// }
	}

	function closeApp() {
		navigator.notification.confirm(
			'Tem certeza que deseja sair do app SigmaCivil?',
			function (buttonIndex) {
				if (buttonIndex === 2) {
					return;
				}

				navigator.app.exitApp();
			},
			'SigmaCivil',
			['OK', 'Cancelar']
		);
	}

	function showTour() {
		var db;
		var request = window.indexedDB.open("db_sigmacivil", "1");

		request.onerror = function (event) {
			alert("Erro ao criar o banco (cod 03)");
		};

		request.onsuccess = function (event) {
			db = request.result;

			var tx = db.transaction(['mtab_config'], 'readwrite');
			var store = tx.objectStore('mtab_config');
			var objectStoreRequest = store.openCursor();
			objectStoreRequest.onsuccess = function (event) {
				var cursor = event.target.result;
				if (cursor) {
					var data = cursor.value;

					data.tutorial = false;
					var request = cursor.update(data);
					request.onsuccess = function (event) {
						volta_uni();
					}
				}
			}

			db.onerror = function (event) {
				alert("Database error: " + event.target.errorCode);
			}
		}
	}

	function sleep(milliseconds) {
		var start = new Date().getTime();
		for (var i = 0; i < 1e7; i++) {
			if ((new Date().getTime() - start) > milliseconds) {
				break;
			}
		}
	}

	function cancelarUpload() {
		document.getElementById("parte_load_content").style.display = "none";
		document.getElementById("parte_load").style.display = "none";
	}

</script>
<script>
	$(document).ready(function () {
		$('.on').click(function () {
			$('ui-slider-label ui-slider-label-a ui-btn-active').toggleClass('background-red')
		})
		$('.btn-bars .ui-btn').click(function () {
			$('.menu .fa-bars').toggleClass('fa-times')
		})
		$('.btn-bars-bars').click(function () {
			$('.is-bars').toggleClass('is-disabled')
			$('.is-times').toggleClass('is-disabled')
		})
	})
</script>