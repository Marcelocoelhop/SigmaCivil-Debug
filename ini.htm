<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>

<head>
	<meta charset="UTF-8" />
	<!-- <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"> -->
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" href="css/jquery.mobile-1.0.1.min.css" />
	<script type="text/javascript" src="cordova.js"></script>
	<script type="text/javascript" src="js/mc.js"></script>

	<script src="js/jquery.js"></script>
	<script src="js/jquery.mobile-1.4.5.min.js"></script>
</head>

<body>

	<script type="text/javascript">

		window.onerror = function (message, url, lineNumber) {
			alert(`Error: ${message} in ${url} at line ${lineNumber}`);
		}

		document.addEventListener("deviceready", onDeviceReady, false);
		function onDeviceReady() {
			iniciar();
		}

		/////////////////////////////
		function iniciar() {
			// Na linha abaixo, você deve incluir os prefixos do navegador que você vai testar.
			window.indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
			// Não use "var indexedDB = ..." se você não está numa function.
			// Posteriormente, você pode precisar de referências de algum objeto window.IDB*:
			window.IDBTransaction = window.IDBTransaction || window.webkitIDBTransaction || window.msIDBTransaction;
			window.IDBKeyRange = window.IDBKeyRange || window.webkitIDBKeyRange || window.msIDBKeyRange;
			// (Mozilla nunca usou prefixo nesses objetos, então não precisamos window.mozIDB*)

			if (!window.indexedDB) {
				alert("Seu navegador não suporta uma versão estável do IndexedDB. Alguns recursos não estarão disponíveis.");
			}

			var db = null;
			const request = indexedDB.open("sigmaDB", 1.0);

			// on upgrade needed
			request.onupgradeneeded = e => {
				db = e.target.result;

				const pNotes = db.createObjectStore("personal_notes",{ keyPath: "id" })
				const todoNotes = db.createObjectStore("todo_notes",{ keyPath: "id" })
				alert(`upgrade is called! database name: ${db.name} and database version: ${db.version}`);
			};

			// on success
			request.onsuccess = e => {
				db = e.target.result;
				alert(`success is called! database name: ${db.name} and database version: ${db.version}`);
			};

			// on error
			request.onerror = e => {
				alert(`error is called! ${e.target.error}`);
			};

		}

	</script>

</body>

</html>